#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

echo "-----> installing Octave version 3.8.2"

# change to the the BUILD_DIR ($1)
PROGRAM=$0
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR="$(dirname $(dirname $0))"
HEROKU_DIR=$BUILD_DIR/.heroku
echo "       PROGRAM=${PROGRAM}"
echo "       BUILD_DIR=${BUILD_DIR}"
echo "       CACHE_DIR=${CACHE_DIR}"
echo "       ENV_DIR=${ENV_DIR}"
echo "       BUILDPACK_DIR=${BUILDPACK_DIR}"
echo "       HEROKU_DIR=${HEROKU_DIR}"

cd $BUILD_DIR
mkdir -p $HEROKU_DIR

echo "-----> downloading binaries"

# download tarballs from S3
curl https://s3.amazonaws.com/heroku-octave-dynare-cedar14/gcc-4.9.2-mbin.tar.gz -s -O
curl https://s3.amazonaws.com/heroku-octave-dynare-cedar14/octave-3.8.2-bin.tar.gz -s -O 

echo "-----> untarring binaries"

# untar the packages
tar -xzf gcc-4.9.2-mbin.tar.gz -C $HEROKU_DIR
tar -xzf octave-3.8.2-bin.tar.gz -C $HEROKU_DIR

echo "-----> update environment"

# copy over environment
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/octave_environment.sh" $BUILD_DIR/.profile.d/octave_environment.sh

echo "-----> clean up mess"


echo "-----> exporting path for dynamic usage in other buildpacks"

LP_DIR=`cd $(dirname $0); cd ..; pwd`

export PATH="$BUILD_DIR/.heroku/octave/bin:$PATH"
export | grep PATH > "$LP_DIR/export"

export LD_LIBRARY_PATH="$BUILD_DIR/.heroku/gcc/lib64:$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/.heroku/octave/deps/qrupdate/lib:$LD_LIBRARY_PATH"
export | grep LD_LIBRARY_PATH >> "$LP_DIR/export"

# cleanup
rm *.tar.gz
